// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(
      a=l1,
      b=l2,
      c=l3,
      d=l4,
      e=l5,
      f=l6,
      g=l7,
      h=l8,
      sel=address[0..2],
      in=load
    );

    Mux8Way16(
      a=r1,
      b=r2,
      c=r3,
      d=r4,
      e=r5,
      f=r6,
      g=r7,
      h=r8,
      sel=address[0..2],
      out=out
    );

    RAM4K(in=in, address=address[3..14], load=l1, out=r1);
    RAM4K(in=in, address=address[3..14], load=l2, out=r2);
    RAM4K(in=in, address=address[3..14], load=l3, out=r3);
    RAM4K(in=in, address=address[3..14], load=l4, out=r4);
    RAM4K(in=in, address=address[3..14], load=l5, out=r5);
    RAM4K(in=in, address=address[3..14], load=l6, out=r6);
    RAM4K(in=in, address=address[3..14], load=l7, out=r7);
    RAM4K(in=in, address=address[3..14], load=l8, out=r8);
}
